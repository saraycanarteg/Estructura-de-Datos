; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Registro Libros"
#define MyAppVersion "1.8"
#define MyAppPublisher "espe.edu..ec"
#define MyAppExeName "main.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{678B2640-4CAB-487B-BE44-57D1FD49FB64}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={autopf}\{#MyAppName}
ChangesAssociations=yes
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputDir=C:\Users\Dell\OneDrive - UNIVERSIDAD DE LAS FUERZAS ARMADAS ESPE\Escritorio\Instalador Proyecto
OutputBaseFilename=setup_Registro
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "armenian"; MessagesFile: "compiler:Languages\Armenian.isl"
Name: "brazilianportuguese"; MessagesFile: "compiler:Languages\BrazilianPortuguese.isl"
Name: "bulgarian"; MessagesFile: "compiler:Languages\Bulgarian.isl"
Name: "catalan"; MessagesFile: "compiler:Languages\Catalan.isl"
Name: "corsican"; MessagesFile: "compiler:Languages\Corsican.isl"
Name: "czech"; MessagesFile: "compiler:Languages\Czech.isl"
Name: "danish"; MessagesFile: "compiler:Languages\Danish.isl"
Name: "dutch"; MessagesFile: "compiler:Languages\Dutch.isl"
Name: "finnish"; MessagesFile: "compiler:Languages\Finnish.isl"
Name: "french"; MessagesFile: "compiler:Languages\French.isl"
Name: "german"; MessagesFile: "compiler:Languages\German.isl"
Name: "hebrew"; MessagesFile: "compiler:Languages\Hebrew.isl"
Name: "hungarian"; MessagesFile: "compiler:Languages\Hungarian.isl"
Name: "icelandic"; MessagesFile: "compiler:Languages\Icelandic.isl"
Name: "italian"; MessagesFile: "compiler:Languages\Italian.isl"
Name: "japanese"; MessagesFile: "compiler:Languages\Japanese.isl"
Name: "korean"; MessagesFile: "compiler:Languages\Korean.isl"
Name: "norwegian"; MessagesFile: "compiler:Languages\Norwegian.isl"
Name: "polish"; MessagesFile: "compiler:Languages\Polish.isl"
Name: "portuguese"; MessagesFile: "compiler:Languages\Portuguese.isl"
Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"
Name: "slovak"; MessagesFile: "compiler:Languages\Slovak.isl"
Name: "slovenian"; MessagesFile: "compiler:Languages\Slovenian.isl"
Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"
Name: "turkish"; MessagesFile: "compiler:Languages\Turkish.isl"
Name: "ukrainian"; MessagesFile: "compiler:Languages\Ukrainian.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "D:\Universidad\Tercer Semestre\Estructura de datos\RepositorioGit\Estructura-de-Datos\Trabajos grupales\Proyecto\output\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\Dell\Downloads\READ ME.txt"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Code]
function SetFocus(hWnd: HWND): HWND; external 'SetFocus@user32.dll stdcall';
const
  Key1 = 'JHY3-TMN1-YTR2-4PHK-JLBR';
  Key2 = 'XPL2-BMNU-7LK3-ZYQT-WEVC';
  Key3 = 'PQT4-ZMN7-RBK1-6TYH-JOPL';
  Key4 = 'WQR9-BNY6-TPL3-XJYH-MEKT';
  Key5 = 'LMY8-TNQ5-BRY2-PXKL-JHOV';

  WM_SETFOCUS = $0007;

var
  ProductKeyPage: TWizardPage;
  KeyEdit1, KeyEdit2, KeyEdit3, KeyEdit4, KeyEdit5: TEdit;
  InfoLabel: TLabel;
  KeyLabel1, KeyLabel2, KeyLabel3, KeyLabel4, KeyLabel5: TLabel;

procedure SetFocusSafe(Edit: TEdit);
begin
  { Usa SendMessage para evitar errores en SetFocus }
  SendMessage(Edit.Handle, WM_SETFOCUS, 0, 0);
end;

procedure HandleEditChange(Sender: TObject);
begin
  { Mueve el foco al siguiente campo automáticamente cuando se alcanzan 4 caracteres }
  if Sender = KeyEdit1 then
  begin
    if Length(KeyEdit1.Text) = 4 then
      SetFocus(KeyEdit2.Handle);
  end
  else if Sender = KeyEdit2 then
  begin
    if Length(KeyEdit2.Text) = 4 then
      SetFocus(KeyEdit3.Handle);
  end
  else if Sender = KeyEdit3 then
  begin
    if Length(KeyEdit3.Text) = 4 then
      SetFocus(KeyEdit4.Handle);
  end
  else if Sender = KeyEdit4 then
  begin
    if Length(KeyEdit4.Text) = 4 then
      SetFocus(KeyEdit5.Handle);
  end;
end;

procedure InitializeWizard;
begin
  { Crea una página personalizada para solicitar la clave de producto }
  ProductKeyPage := CreateCustomPage(wpWelcome,
    'Clave de Producto',
    'Ingrese su clave de producto');

  { Agrega un mensaje adicional en la página }
  InfoLabel := TLabel.Create(WizardForm);
  InfoLabel.Parent := ProductKeyPage.Surface;
  InfoLabel.Caption := 'Por favor, introduzca su clave de producto para continuar con la instalación.';
  InfoLabel.Left := 10;
  InfoLabel.Top := 10;
  InfoLabel.Width := ProductKeyPage.Surface.Width - 20;

  { Crear campos de entrada para cada bloque }
  KeyEdit1 := TEdit.Create(WizardForm);
  KeyEdit1.Parent := ProductKeyPage.Surface;
  KeyEdit1.Left := 10;
  KeyEdit1.Top := 40;
  KeyEdit1.Width := 70;
  KeyEdit1.MaxLength := 4;
  KeyEdit1.OnChange := @HandleEditChange;

  KeyEdit2 := TEdit.Create(WizardForm);
  KeyEdit2.Parent := ProductKeyPage.Surface;
  KeyEdit2.Left := KeyEdit1.Left + KeyEdit1.Width + 10;
  KeyEdit2.Top := KeyEdit1.Top;
  KeyEdit2.Width := 70;
  KeyEdit2.MaxLength := 4;
  KeyEdit2.OnChange := @HandleEditChange;

  KeyEdit3 := TEdit.Create(WizardForm);
  KeyEdit3.Parent := ProductKeyPage.Surface;
  KeyEdit3.Left := KeyEdit2.Left + KeyEdit2.Width + 10;
  KeyEdit3.Top := KeyEdit1.Top;
  KeyEdit3.Width := 70;
  KeyEdit3.MaxLength := 4;
  KeyEdit3.OnChange := @HandleEditChange;

  KeyEdit4 := TEdit.Create(WizardForm);
  KeyEdit4.Parent := ProductKeyPage.Surface;
  KeyEdit4.Left := KeyEdit3.Left + KeyEdit3.Width + 10;
  KeyEdit4.Top := KeyEdit1.Top;
  KeyEdit4.Width := 70;
  KeyEdit4.MaxLength := 4;
  KeyEdit4.OnChange := @HandleEditChange;

  KeyEdit5 := TEdit.Create(WizardForm);
  KeyEdit5.Parent := ProductKeyPage.Surface;
  KeyEdit5.Left := KeyEdit4.Left + KeyEdit4.Width + 10;
  KeyEdit5.Top := KeyEdit1.Top;
  KeyEdit5.Width := 70;
  KeyEdit5.MaxLength := 4;
  KeyEdit5.OnChange := @HandleEditChange;
end;

function CombineKeyBlocks: String;
begin
  { Combina los valores de los campos con guiones }
  Result := KeyEdit1.Text + '-' +
            KeyEdit2.Text + '-' +
            KeyEdit3.Text + '-' +
            KeyEdit4.Text + '-' +
            KeyEdit5.Text;
end;

function CheckProductKey(const Key: string): Boolean;
begin
  Result := (Key = Key1) or (Key = Key2) or (Key = Key3) or (Key = Key4) or (Key = Key5);
end;

function NextButtonClick(CurPageID: Integer): Boolean;
var
  EnteredKey: String;
begin
  Result := True;

  if CurPageID = ProductKeyPage.ID then
  begin
    { Combina los bloques para obtener la clave completa }
    EnteredKey := CombineKeyBlocks;

    { Verifica si la clave es válida }
    if not CheckProductKey(EnteredKey) then
    begin
      MsgBox('La clave de producto ingresada no es válida. Por favor, inténtelo de nuevo.',
        mbError, MB_OK);
      Result := False;
    end;
  end;
end;


[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

